---
- name: Install required packages (Podman and httpd-tools)
  package:
    name: "{{ item }}"
    state: present
  loop:
    - podman
    - httpd-tools
  become: true

- name: Create directory structure
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  loop:
    - "{registry_data_dir}"
    - "{registry_auth_dir}"
    - "{registry_certs_dir}"

- name: Generate SSL Key and Certificate
  openssl_certificate:
    path: "{registry_certs_dir}/domain.crt"
    privatekey_path: "{registry_certs_dir}/domain.key"
    privatekey_type: rsa
    privatekey_passphrase: ""
    common_name: "{{ cert_cn }}"
    bits: 4096
    days: 365
    force: yes
    state: present
    selfsigned: yes
    subject: "/C={{ cert_c }}/ST={{ cert_s }}/L={{ cert_l }}/O={{ cert_o }}/OU={{ cert_ou }}/CN={{ cert_cn }}"
    extensions:
      - subjectAltName=DNS:{{ host_fqdn }}
  when: cert_cn is defined and host_fqdn is defined
  become: true

- name: Copy domain.crt to CA trust anchors directory
  copy:
    src: "{registry_certs_dir}/domain.crt"
    dest: /etc/pki/ca-trust/source/anchors/
    mode: '0644'
  become: true
  register: copy_result

- name: Update CA trust
  command: update-ca-trust
  become: true
  when: copy_result.changed

- name: Run Offline Registry Container
  ansible.builtin.podman_container:
    name: ocpdiscon-registry
    image: quay.io/midu/registry:latest
    ports:
      - "5000:5000"
    env:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry
      REGISTRY_HTTP_SECRET: ALongRandomSecretForRegistry
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED: true
      REGISTRY_STORAGE_DELETE_ENABLED: true
    volumes:
      - "{registry_data_dir}:/var/lib/registry:z"
      - "{registry_auth_dir}:/auth:z"
      - "{registry_certs_dir}:/certs:z"
    state: started
