---
- name: Create Master PerformanceProfile Resource
  kubernetes.core.k8s:
    api_version: performance.openshift.io/v2
    kind: PerformanceProfile
    name: "{{ performance_profile_name }}"
    definition:
      metadata:
        annotations:
          ran.openshift.io/reference-configuration: ran-du.redhat.com
      spec:
        additionalKernelArgs: "{{ additional_kernel_args }}"
        cpu:
          isolated: "{{ cpu_isolated }}"
          reserved: "{{ cpu_reserved }}"
        globallyDisableIrqLoadBalancing: "{{ globally_disable_irq_load_balancing }}"
        hugepages:
          defaultHugepagesSize: "{{ default_hugepages_size }}"
          pages:
            - count: "{{ pages_count }}"
              size: "{{ pages_size }}"
        machineConfigPoolSelector:
          pools.operator.machineconfiguration.openshift.io/master: ''
        nodeSelector:
          node-role.kubernetes.io/master: ''
        numa:
          topologyPolicy: "{{ numa_topology_policy }}"
        realTimeKernel:
          enabled: "{{ real_time_kernel_enabled }}"
    state: present

- name: Create Worker PerformanceProfile Resource
  kubernetes.core.k8s:
    api_version: performance.openshift.io/v2
    kind: PerformanceProfile
    name: "{{ performance_profile_name }}-worker"
    definition:
      metadata:
        annotations:
          ran.openshift.io/reference-configuration: ran-du.redhat.com
      spec:
        additionalKernelArgs: "{{ additional_kernel_args }}"
        cpu:
          isolated: "{{ cpu_isolated }}"
          reserved: "{{ cpu_reserved }}"
        globallyDisableIrqLoadBalancing: "{{ globally_disable_irq_load_balancing }}"
        hugepages:
          defaultHugepagesSize: "{{ default_hugepages_size }}"
          pages:
            - count: "{{ pages_count }}"
              size: "{{ pages_size }}"
        machineConfigPoolSelector:
          pools.operator.machineconfiguration.openshift.io/worker: ''
        nodeSelector:
          node-role.kubernetes.io/worker: ''
        numa:
          topologyPolicy: "{{ numa_topology_policy }}"
        realTimeKernel:
          enabled: "{{ real_time_kernel_enabled }}"
    state: present
  when: ocp_cluster == "MNO"